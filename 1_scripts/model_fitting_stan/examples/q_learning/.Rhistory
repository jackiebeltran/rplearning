getwd()
data = read.csv('data.csv')
View(data)
library(rstan)
subs = unique(data$sub)
View(data)
NS = 20 # number of subjects
NT = 200 # number of trials
c = array(0,c(NS,NT))
View(c)
r = array(0,c(NS,NT))
View(r)
covariate = matrix(0,NS)
View(covariate)
View(data)
for (i in 1:NS) {
c[i,1:NT] = subset(data,sub==subs[i])$c - 1; # subset df for ith subject, extract values from column 'c', and assign those values to the ith row of matrix c
r[i,1:NT] = subset(data,sub==subs[i])$r;
}
standata = list(NS= NS, NT=NT, c=c, r=r)
View(standata)
rstan_options(auto_write = TRUE)
options(mc.cores = parallel::detectCores())
fit<- stan(file = 'qlearning.stan', data = standata, iter = 1000, warmup=250, chains = 4)
View(fit)
fit@model_pars
NS = 19
NT = 200
loosub = 20
subs = unique(subset(data,sub != loosub)$sub)
c = array(0,c(NS,NT))
r = array(0,c(NS,NT))
for (i in 1:NS) {
c[i,1:NT] = subset(data,sub==subs[i])$c - 1;
r[i,1:NT] = subset(data,sub==subs[i])$r;
}
cloo = subset(data,sub==loosub)$c - 1;
cloo
rloo = subset(data,sub==loosub)$r;
standata = list(NS= NS, NT=NT, c=c, r=r, cloo=cloo, rloo=rloo)
View(standata)
View(fit)
fit@sim[["samples"]][[1]][["alpham"]]
