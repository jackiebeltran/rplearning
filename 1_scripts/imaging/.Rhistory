model2a <- glmer(anxious ~ steps + day + sub_group + (1 | participant),
data = steps_filter, family = poisson(link = "log"))
summary(model2a)
model2a <- glmer(anxious ~ scale(steps) + day + sub_group + (1 | participant),
data = steps_filter, family = poisson(link = "log"))
summary(model2a)
model2a <- glmer(anxious ~ log(steps) + day + sub_group + (1 | participant),
data = steps_active, family = poisson(link = "log"))
ggplot(steps_filter, aes(x = scale(steps), y = anxious, colour = sub_group)) +
geom_point(
size = 2,
alpha = 0.4,
position = position_dodge(0.2),
aes(color = sub_group)
) +
geom_smooth(
fill = "grey50",
alpha = 0.2,
method = lm,
aes(color = sub_group, fill = sub_group)
) +
labs(x = "steps (scaled)",
y = "Anxiety EMA",
title = "") +
theme_minimal() +
scale_color_manual(values = c("#999999", "#006666")) +
theme(
legend.position = c(0.90, 0.95),
legend.title = element_blank(),
plot.title = element_text(size = 20, hjust = 0.5),
strip.text.x = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 24),
legend.text = element_text(size = 20)
)
steps_filter$log_steps = log(steps_filter$steps)
View(steps_filter)
hist(steps_filter$log_steps)
model2 <- lmer(anxious ~ log_steps + day + sub_group + (1 | participant),
data = steps_filter, REML = FALSE)
steps_filter$log_steps = (log(steps_filter$steps) + 0.001)
hist(steps_filter$log_steps)
model2 <- lmer(anxious ~ log_steps + day + sub_group + (1 | participant),
data = steps_filter, REML = FALSE)
library(ggplot2)
library(tidyverse)
getwd()
full_active <- read_csv("../00_raw_data/inclusion_active.csv")
full_active <- read_csv("../00_raw_data/inclusion_active.csv")
single_subj <-
full_active %>% filter(participant == "U2309637811") %>% select("day", "depressed", "int_mot", "anxious")
single_subj <-
full_active %>% filter(participant == "U2309637811") %>% dplyr::select("day", "depressed", "int_mot",
"anxious")
mean_val <- colMeans(single_subj,na.rm = TRUE)
for(i in colnames(single_subj))
single_subj[,i][is.na(single_subj[,i])] <- mean_val[i]
single_subj
single_subj_m <- data.table::melt(single_subj, id.vars = c("day"), variable.name = "symptom")
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "Symptom") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(breaks = seq(0, 10, by = 2))  +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(breaks = seq(0, 12, by = 2))  +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
View(single_subj_m)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, max(single_subj_m$value)))
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, max(single_subj_m$value))) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, 10)) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, 8)) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, 12)) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, 10)) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, 10), breaks =  seq(0,10), by =2) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(breaks = seq(2, 30, by = 2))  +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10, by = 2)) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
ggplot(single_subj_m, aes(x = day, y = value)) +
geom_line(aes(color = symptom)) +
geom_point(aes(color = symptom)) +
labs(x = "Day",
y = "score") +
scale_color_manual(
labels = c("depressed", "intrinsic motivation", "anxious"),
values = c("magenta2", "royalblue1", "seagreen3")
) +
scale_x_continuous(limits = c(0, 30), breaks = seq(0, 30, by = 2))  +
scale_y_continuous(limits = c(0, 10), breaks=seq(0,10, by = 2)) +
theme_linedraw() +
theme(legend.title = element_blank(),
legend.position = "top",
legend.text = element_text(size = 15),
axis.text = element_text(size = 20),
axis.title = element_text(size = 20)
)
knitr::opts_chunk$set(echo = TRUE)
require(ggplot2)
require(tidyr)
require(dplyr)
require(ggpubr)
require(data.table)
require(tidyr)
require(patchwork)
require(ppcor)
getwd()
roi <- read.csv('../../../../RL/data/roi_N74.csv') # roi extraction for each subj
setwd("~/Documents/GitHub/RP_Learning/1_scripts/imaging")
getwd()
roi <- read.csv('../../../../RL/data/roi_N74.csv') # roi extraction for each subj
assess <- read.csv('../../../../RL/data/K01_tracking_covs.csv')
# correlation with clinical assessments
ca_analysis <- function(df, roi, contrast, scale, group_col) {
# subset the dataframe for the ROI and contrast of interest
df_sub = df[df$ROI == roi,c(group_col, contrast, scale)]
HC_normalcy_contrast_test <-
with(df_sub, shapiro.test(df_sub[[contrast]][group == "HC"]))
MDD_normalcy_contrast_test <-
with(df_sub, shapiro.test(df_sub[[contrast]][group == "MDD"]))
HC_normalcy_scale_test <- with(df_sub, shapiro.test(df_sub[[scale]][group == "HC"]))
MDD_normalcy_scale_test <- with(df_sub, shapiro.test(df_sub[[scale]][group == "MDD"]))
if (HC_normalcy_contrast_test$p.value < 0.05 |
HC_normalcy_scale_test$p.value < 0.05) {
print("Conducting non-parametric test...")
hc_spearman_result <-
cor.test(df_sub[[contrast]][df_sub[[group_col]] == "HC"],
df_sub[[scale]][df_sub[[group_col]] == "HC"], method = "spearman")
hc_pearson_result <- NULL
} else {
print("Conducting pearson correlation test...")
hc_spearman_result <- NULL
hc_pearson_result <-
cor.test(df_sub[[contrast]][df_sub[[group_col]] == "HC"],
df_sub[[scale]][df_sub[[group_col]] == "HC"],
method = "pearson")
}
if (MDD_normalcy_contrast_test$p.value < 0.05 |
MDD_normalcy_scale_test$p.value < 0.05) {
print("Conducting non-parametric test...")
mdd_spearman_result <-
cor.test(df_sub[[contrast]][df_sub[[group_col]] == "MDD"],
df_sub[[scale]][df_sub[[group_col]] == "MDD"],
method = "spearman")
mdd_pearson_result <- NULL
} else {
print("Conducting pearson correlation test...")
mdd_spearman_result <- NULL
mdd_pearson_result <-
cor.test(df_sub[[contrast]][df_sub[[group_col]] == "MDD"],
df_sub[[scale]][df_sub[[group_col]] == "MDD"],
method = "pearson")
}
results <- list(
HC_normalcy_contrast_test = HC_normalcy_contrast_test,
HC_normalcy_scale_test = HC_normalcy_scale_test,
MDD_normalcy_contrast_test = MDD_normalcy_contrast_test,
MDD_normalcy_scale_test = MDD_normalcy_scale_test,
hc_spearman_result = hc_spearman_result,
hc_pearson_result = hc_pearson_result,
mdd_spearman_result = mdd_spearman_result,
mdd_pearson_result = mdd_pearson_result
)
return(results)
}
ca_sub <- assess %>% dplyr::select('K01_SUBID', 'TEPS.Anticipatory', 'TEPS.Consummatory')
# rename column to then merge datasets
names(ca_sub)[names(ca_sub) == "K01_SUBID"] <- "subj_ID"
df_full <- merge(roi, ca_sub)
ca_sub <- assess %>% dplyr::select('K01_SUBID', 'TEPS.Anticipatory', 'TEPS.Consummatory')
# rename column to then merge datasets
names(ca_sub)[names(ca_sub) == "K01_SUBID"] <- "subj_ID"
df_full <- merge(roi, ca_sub)
teps <-
df_full %>% dplyr::select('subj_ID', 'group', 'TEPS.Anticipatory', 'TEPS.Consummatory') %>%
distinct()
# anticipatory; mean HC = 45.9(8.75), mean MDD = 35.7(10.2)
# consum; mean HC = 38.8(7.93), mean MDD = 32.9(9.16)
teps_m <-
reshape2::melt(teps,
id = c('subj_ID', 'group'),
variable.name = "TEPS")
teps_sum <- teps_m %>%
group_by(group, TEPS) %>%
summarise(mean_contrast = mean(value), sd_contrast= sd(value))
teps_out_3 <- teps_m %>%
group_by(group, TEPS) %>%
mutate(
mean_value = mean(value),
sd_value = sd(value),
is_outlier = value > (mean_value + 3 * sd_value) |
value < (mean_value - 3 * sd_value)
)
# Identify outliers
teps_outliers <- teps_out_3 %>% filter(is_outlier == T)
# View the outliers
print(teps_outliers) # HC, 543 on both scales: teps_ant = 15, teps_cons = 9
# remove outliers
teps_df <-
anti_join(teps_out_3,
teps_outliers,
by = c("subj_ID", "group", "TEPS")) %>%
dplyr::select("subj_ID", "group", "TEPS", "value")
# quick check, subj 543 should be omitted in teps_df
teps_df %>% filter(subj_ID == 543)
## summary statistics for dataset without outliers
teps_df_sum <- teps_df %>%
group_by(group, TEPS) %>%
summarise(mean_value = mean(value), sd_value= sd(value))
# select for ROIs of interest
roi_filtered <- roi %>%
filter(
ROI %in% c(
"vta_mni",
"vta_aveHCPT",
"amyg",
"LB_amyg",
"vmPFC",
"rl_accumbens",
"antrInsula"
)
)
length(unique(roi_filtered$subj_ID)) # N = 74
str(roi_filtered)
roi_filtered$subj_ID <- as.factor(roi_filtered$subj_ID)
roi_filtered$group <- as.factor(roi_filtered$group)
roi_filtered$ROI <- as.factor(roi_filtered$ROI)
# subset for MDD
roi_mdd <- roi_filtered %>% filter(grepl("^4", subj_ID))
length(unique(roi_mdd$subj_ID)) # N = 38
# melt just to plot / generate a summary of means & stds
roi_contrasts_m <-
reshape2::melt(roi_filtered,
id = c('subj_ID', 'group', 'ROI'),
variable.name = "contrast")
roi_contrasts_sum <- roi_contrasts_m %>%
group_by(group, contrast, ROI) %>%
summarise(mean_contrast = mean(value), sd_contrast= sd(value)) %>% arrange(contrast, ROI)
# write.csv(roi_contrasts_sum, file = "roi_summary_stats.csv", row.names=F)
roi_out_3 <- roi_contrasts_m %>%
group_by(group, contrast, ROI) %>%
mutate(
mean_value = mean(value),
sd_value = sd(value),
is_outlier = value > (mean_value + 3 * sd_value) |
value < (mean_value - 3 * sd_value)
)
# Identify outliers
outliers_3 <- roi_out_3 %>% filter(is_outlier == T)
# View the outliers
print(outliers_3)
roi_o <-
anti_join(roi_out_3,
outliers_3,
by = c("subj_ID", "group", "contrast", "ROI", "value")) %>%
dplyr::select("subj_ID", "group", "ROI", "contrast", "value")
# quick check, subj 413 nac, stimgain should be omitted in roi_o
roi_o %>% filter(subj_ID == 413 & ROI == "rl_accumbens")
## summary statistics for dataset without outliers
roi_o_sum <- roi_o %>%
group_by(group, contrast, ROI) %>%
summarise(mean_contrast = mean(value), sd_contrast= sd(value)) %>% arrange(contrast, ROI)
roi_o_w <- reshape2::dcast(roi_o, subj_ID + group + ROI ~ contrast)
roi_o_w <- roi_o_w[order(roi_o_w$ROI, roi_o_w$subj_ID),]
col_order <-
c(
"group",
"subj_ID",
"stimGain",
"stimLoss",
"stimNeutral",
"keyGo",
"fb_loss_rpe",
"fb_gain_rpe",
"fb_all_rpe",
"ROI"
)
roi_o_w <- roi_o_w[, col_order]
teps_o_w <- reshape2::dcast(teps_df, subj_ID + group ~ TEPS)
df <- merge(teps_o_w, roi_o_w)
length(unique(df$subj_ID)) # N = 73, one subject missing
str(df)
covs <- assess %>% dplyr::select('K01_SUBID', 'SUB_gender', 'SUB_Age', 'Medication')
# rename column
names(covs)[names(covs) == "K01_SUBID"] <- "subj_ID"
# merge
df_covs <- merge(df, covs)
length(unique(df_covs$subj_ID)) # N = 73
df_covs$subj_ID <- as.factor(df_covs$subj_ID)
df_covs$group<- as.factor(df_covs$group)
df_covs$SUB_gender <- as.factor(df_covs$SUB_gender)
amy <- roi_o_w[roi_o_w$ROI == "amyg", ]
group_order <- c("HC", "MDD")
# Convert the 'group' variable to a factor with the specified order
roi_o_w$group <- factor(roi_o_w$group, levels = group_order)
View(amy)
ggboxplot(amy, x = "group", y = "fb_all_rpe", fill = "group", add = "jitter") +
scale_fill_manual(values=c('lightblue3','peachpuff')) +
labs(x = "",
y = "amygdala rpe",
title = "") +
theme_classic() +
theme(
axis.text = element_text(size = 20),
axis.title = element_text(size = 24),
axis.ticks = element_line(size = 1.5),
legend.title = element_blank(),
legend.position = "",
)
install.packages("tidyverse")
install.packages("lme4")
install_github("nyiuab/NBZIMM", force=T, build_vignettes=F)
install.packages("GLMMadaptive")
install.packages("performance")
install.packages("tidyverse")
install.packages("lme4")
install.packages("performance")
